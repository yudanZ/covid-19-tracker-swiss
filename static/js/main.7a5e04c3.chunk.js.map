{"version":3,"sources":["components/Navigation.js","components/OverViewInfo.js","components/LineChart.js","containers/OverView.js","database/mapDataSwitlzerland.js","components/Map.jsx","components/DropDown.jsx","components/EachContonCart.js","components/ContonDetails.js","utility/utities.js","containers/ChartPanel.js","pages/OverViewPage.jsx","components/SearchBox.jsx","database/data.js","pages/ListCountries.jsx","pages/Symptions.jsx","components/HygieCart.jsx","pages/ProventionPage.jsx","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","OverViewInfo","props","scope","latestInfo","date","news","totalconfirmed","newrecovered","totalrecovered","newdeath","totaldeath","LineChart","options","title","text","xAxis","labels","format","align","rotation","tickInterval","plotOptions","series","pointStart","earliestDate","pointInterval","yAxis","lineWidth","tickWidth","offset","y","legend","layout","verticalAlign","responsive","rules","condition","maxWidth","chartOptions","x","subtitle","credits","enabled","highcharts","Highcharts","OverView","fetchData","a","axios","get","then","res","totalStatus","data","setState","isLoading","state","latestInfos","slice","length","calculateStatus","generateLineChartsData","catch","error","console","log","newStatus","Confirmed","Deaths","Recovered","formateDate","Date","str","splitArr","split","year","month","day","indexOf","confirmedObject","name","totalDeathObject","color","totalRecoveredObject","forEach","element","push","this","React","Component","mapDataSwitzerland","fetch","response","json","require","Map","setSeriesData","casesData","filterData","item","contonKey","fields","abbreviation_canton_and_fl","toLowerCase","ncumul_conf","setOptions","mapData","myChartData","chart","map","mapNavigation","buttonOptions","colorAxis","min","states","hover","dataLabels","getMapData","contonsData","constructorType","DropDown","aria-haspopup","aria-labelledby","onClick","onButtonClick","EachContonCart","latestInfoByName","current_hosp","current_isolated","current_quarantined","current_vent","ncumul_deceased","ContonDetails","getContonName","chartOptins","fileterDateForLineChart","strArr","UTC","parseInt","ChartPanel","getLineChartsOptions","contonData","reversedArr","reverse","numberOfHospObject","dat","ncumul_hosp","lineChartOptions","getCurrentDate","getFullYear","getMonth","getDate","e","target","fetchContonData","dateArr","latestRecordDate","countryData","records","getLatestInfoByName","xAxisArr","OverViewPage","SearchBox","searchChange","placeholder","onChange","listCountries","region","otherCountries","hygienRules","imageUrl","description","ListCountries","onSearchChange","searchFields","value","filterListRegion","filterListCountries","filter","listCountry","includes","some","filterResult","filterOtherCountries","role","country","index","key","SymptionsPage","rel","styple","fontSize","HygieCart","rule","style","width","src","alt","class","ProventionPage","Footer","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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UACNuF,OAAO,CACH,kBACA,kBACA,kBACA,sBAOCC,EAAiB,CAC1B,UACA,UACA,YACA,UACA,cACA,UACA,UACA,SACA,yBACA,SACA,SACA,aACA,QACA,WACA,aACA,UACA,iBACA,qBACA,UACA,UACA,SACA,WACA,UACA,UACA,QACA,OACA,OACA,UACA,SACA,UACA,SACA,SACA,UACA,QACA,YACA,WACA,QACA,UACA,UACA,SACA,aACA,QACA,6BACA,kBACA,iCACA,OACA,SACA,WACA,OACA,WACA,QACA,UACA,SACA,WACA,WACA,QACA,UACA,UACA,uBACA,kCACA,4BAGUC,EAAc,CACxB,CACIC,SAAU,iBACVC,YAAa,oBAEjB,CACID,SAAU,iBACVC,YAAa,mEAEjB,CACID,SAAU,iBACVC,YAAa,+BAEjB,CACID,SAAU,iBACVC,YAAa,wEAEjB,CACID,SAAU,iBACVC,YAAa,gFAEjB,CACID,SAAU,iBACVC,YAAa,wEAEjB,CACID,SAAU,iBACVC,YAAa,6FAEjB,CACID,SAAU,iBACVC,YAAa,uBAEjB,CACID,SAAU,iBACVC,YAAa,qCAEjB,CACID,SAAU,iBACVC,YAAa,oHC7CNC,E,kDAzGX,WAAY3K,GAAO,IAAD,8BACd,cAAMA,IASV4K,eAAiB,SAACrB,GAEd,EAAKlG,SAAS,CAACwH,aAActB,EAAEC,OAAOsB,SATtC,EAAKvH,MAAQ,CACT8G,cAAeA,EACfE,eAAgBA,EAChBM,aAAc,IANJ,E,qDAcT,IAEDE,EAFA,EACkDzF,KAAK/B,MAApD8G,EADH,EACGA,cAAeQ,EADlB,EACkBA,aAAcN,EADhC,EACgCA,eAE9BS,EAAsBX,EAAcY,QAAQ,SAAAC,GAC9C,OAAOA,EAAYnG,KAAKuB,cAAc6E,SAASN,EAAavE,kBAG5D0E,EAAoBtH,SACpBqH,EAAmBV,EAAcY,QAAQ,SAAAC,GAOrC,OALcA,EAAYZ,OAAOc,MAAM,SAAAlF,GAAI,OAEvCA,EAAKI,cAAc6E,SAASN,EAAavE,sBAQrD,IAAM+E,EAAeL,EAAoBtH,OAASsH,EAAsBD,EAClEO,EAAuBf,EAAeU,QAA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","file":"static/js/main.7a5e04c3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst Navigation = () => {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#1\">Covid-19 Switzerland</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item \">\r\n                        <Link className=\"nav-link\" to=\"/\">Overview Situation <span className=\"sr-only\"></span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/list\">List of countries and areas</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/symptions\">Symptoms</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/provention\">Protections</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './overViewInfo.css';\r\n\r\nconst OverViewInfo = (props) => {\r\n    //console.log(props.latestInfo)\r\n    return (\r\n        <div className='overview-container'>\r\n            <h2>New Coronavirus:Situation in Switzerland </h2>\r\n            <table className=\"table table-bordered overview-table\">\r\n            <thead>\r\n                <tr>\r\n                <th scope=\"col\">{props.latestInfo.date}</th>\r\n                <th scope=\"col\">New Cases</th>\r\n                <th scope=\"col\">Total since the beginning\r\n                the epidemic</th>\r\n                \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                <th scope=\"row\">Laboratory Confirmed Infections</th>\r\n                <td>{props.latestInfo.news === 0 ? '--' : props.latestInfo.news}</td>\r\n                <td>{props.latestInfo.totalconfirmed === 0 ? '--' : props.latestInfo.totalconfirmed}</td>\r\n                 \r\n                </tr>\r\n                <tr>\r\n                <th scope=\"row\">Recovered</th>\r\n                <td>{props.latestInfo.newrecovered === 0 ? '--' : props.latestInfo.newrecovered}</td>\r\n                <td>{props.latestInfo.totalrecovered}</td>\r\n               \r\n                </tr>\r\n                <tr>\r\n                <th scope=\"row\">Deaths</th>\r\n                <td >{props.latestInfo.newdeath === '0' ? '--' : props.latestInfo.newdeath}</td>\r\n                <td>{props.latestInfo.totaldeath}</td>\r\n                </tr>\r\n                <tr>\r\n               \r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OverViewInfo;","import React from 'react';\r\n\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport './lineChart.css';\r\n\r\nconst LineChart = (props) => {\r\n    //console.log('start Point:' + props.earliestDate);\r\n    var options = {\r\n        title: {\r\n          text: 'Laboratory confirmed cases: evolution of geographical spread over time'\r\n        },\r\n        xAxis: {\r\n            type: 'datetime',\r\n            labels: {\r\n                format: '{value: %m/%Y}',\r\n                align: 'right',\r\n                rotation: -30\r\n            },\r\n            title: {\r\n                text: 'date'\r\n            },\r\n            tickInterval: 15* 24 * 3600 * 1000\r\n        },\r\n        plotOptions: {\r\n            series:{\r\n                pointStart: props.earliestDate,\r\n                pointInterval:  24 * 3600 * 1000\r\n            }\r\n            \r\n            \r\n        },\r\n        yAxis: {\r\n            lineWidth: 1,\r\n            tickWidth: 1,\r\n            title: {\r\n                align: 'high',\r\n                offset: 0,\r\n                text: 'numbers of cases',\r\n                rotation: 0,\r\n                y: -10\r\n            }\r\n        },\r\n        legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'middle'\r\n        },\r\n        series: props.options, \r\n        responsive: {\r\n            rules: [{\r\n              condition: {\r\n                maxWidth: 500\r\n              },\r\n              chartOptions: {\r\n                legend: {\r\n                  align: 'center',\r\n                  verticalAlign: 'bottom',\r\n                  layout: 'horizontal'\r\n                },\r\n                yAxis: {\r\n                  labels: {\r\n                    align: 'left',\r\n                    x: 0,\r\n                    y: -5\r\n                  },\r\n                  title: {\r\n                    text: null\r\n                  }\r\n                },\r\n                subtitle: {\r\n                  text: null\r\n                },\r\n                credits: {\r\n                  enabled: false\r\n                }\r\n              }\r\n            }]\r\n          },\r\n      }\r\n      \r\n      //console.log(options);\r\n    return (\r\n        <div className='linechart-container'>\r\n        {props.earliestDate ? <HighchartsReact\r\n            highcharts = {Highcharts}\r\n            options = {options} \r\n        /> : <div>Loading...</div>}    \r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default LineChart;","import React from 'react';\r\nimport axios from 'axios';\r\nimport OverViewInfo from '../components/OverViewInfo';\r\nimport LineChart from '../components/LineChart';\r\nimport './overView.css';\r\n\r\nclass OverView extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            totalStatus : [],\r\n            newStatus: null,\r\n            options: [],\r\n            earliestDate:1579651200000\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchData();\r\n        \r\n        //this.generateLineChartsData(this.state.totalStatus);\r\n        \r\n    }\r\n\r\n    fetchData = async( ) => {\r\n        \r\n        //console.log(year, month, day);\r\n       \r\n        axios.get(`https://api.covid19api.com/total/country/switzerland`)\r\n        .then(res => {\r\n          const totalStatus = res.data;\r\n          this.setState({ isLoading: !this.state.isLoading});\r\n          //console.log(totalStatus);\r\n          this.setState({totalStatus: totalStatus});\r\n          //console.log( this.state)\r\n          const latestInfos = totalStatus.slice( totalStatus.length -2, totalStatus.length);\r\n          //console.log(latestInfos)\r\n          this.calculateStatus(latestInfos);\r\n\r\n          this.generateLineChartsData( totalStatus)\r\n        })\r\n        .catch(error => console.log(error)\r\n        )\r\n    \r\n    \r\n    }\r\n\r\n    calculateStatus = (latestInfos) => {\r\n        let newStatus = {\r\n            news: 0,\r\n            totalconfirmed: 0,\r\n            totaldeath: 0,\r\n            totalrecovered: 0,\r\n            newdeath: 0,\r\n            newrecovered: 0,\r\n            date: '--',\r\n            \r\n\r\n        };\r\n        //console.log(latestInfos)\r\n        if( latestInfos.length >= 2){\r\n            //console.log(latestInfos[1].Confirmed)\r\n            newStatus.news = latestInfos[1].Confirmed - latestInfos[0].Confirmed;\r\n            newStatus.totalconfirmed = latestInfos[1].Confirmed;\r\n            newStatus.totaldeath = latestInfos[1].Deaths;\r\n            newStatus.totalrecovered = latestInfos[1].Recovered;\r\n            newStatus.newdeath = latestInfos[1].Deaths - latestInfos[0].Deaths;\r\n            newStatus.newrecovered = latestInfos[1].Recovered - latestInfos[0].Recovered;\r\n           \r\n            newStatus.date = this.formateDate(latestInfos[1].Date);\r\n        }\r\n\r\n       this.setState({newStatus : newStatus});\r\n       //console.log(this.state)\r\n        \r\n    }\r\n\r\n    formateDate  = ( str ) => {\r\n        const splitArr = str.split('-');\r\n        const year = splitArr[0];\r\n        const month = splitArr[1];\r\n       \r\n        const day = (splitArr[2].slice(0,splitArr[2].indexOf('T',0)));\r\n\r\n        return `${day}.${month}.${year}`;\r\n    } \r\n\r\n    generateLineChartsData = ( totalStatus ) => {\r\n        //console.log( totalStatus);\r\n        let options = [];\r\n        let confirmedObject = {\r\n            name: 'total confirmed number',\r\n            data: []\r\n        }\r\n        let totalDeathObject = {\r\n            name: 'total death number',\r\n            data: [],\r\n            color: '#FF0000'\r\n            \r\n        }\r\n        let totalRecoveredObject = {\r\n            name: 'total recovered number',\r\n            data: [],\r\n            color: '#008000' \r\n        }\r\n        totalStatus.forEach( element => {\r\n            //console.log(element)\r\n            confirmedObject.data.push([this.formateDate(element.Date),element.Confirmed])\r\n            totalDeathObject.data.push([this.formateDate(element.Date),element.Deaths])\r\n            totalRecoveredObject.data.push([this.formateDate(element.Date),element.Recovered])\r\n        })\r\n        //console.log(confirmedObject);\r\n        options.push(confirmedObject);\r\n       \r\n        options.push(totalDeathObject);\r\n        options.push(totalRecoveredObject);\r\n\r\n        this.setState({options: options})\r\n        //console.log(this.state.options)\r\n    }\r\n    render(){\r\n        const {newStatus, options} = this.state;\r\n        //console.log(options)\r\n        \r\n       \r\n        return(\r\n            <div className='section-overview'>\r\n            \r\n            {newStatus ? <OverViewInfo latestInfo={newStatus}/> : <div>Loading...</div>}\r\n            {options ? <LineChart options = {options} earliestDate={this.state.earliestDate}/> : <div>Loading...</div> }  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OverView;\r\n","export const mapDataSwitzerland = async() => {\r\n  const response = await fetch('https://code.highcharts.com/mapdata/countries/ch/ch-all.geo.json');\r\n  return await response.json()\r\n}\r\n\r\n\r\nexport const data = [\r\n \r\n  ['ch-fr', 0],\r\n  ['ch-lu', 0],\r\n  ['ch-ni', 0],\r\n  ['ch-vs', 0],\r\n  ['ch-sg', 0],\r\n  ['ch-ar', 0],\r\n  ['ch-ti', 0],\r\n  ['ch-gl', 0],\r\n  ['ch-gr', 0],\r\n  ['ch-sz', 0],\r\n  ['ch-tg', 0],\r\n  ['ch-sh', 0],\r\n  ['ch-ur', 0],\r\n  ['ch-zh', 0],\r\n  ['ch-zg', 0],\r\n  ['ch-vd', 0],\r\n  ['ch-bl', 0],\r\n  ['ch-be', 0],\r\n  ['ch-bs', 0],\r\n  ['ch-so', 0],\r\n  ['ch-nw', 0],\r\n  ['ch-ai', 0],\r\n  ['ch-ge', 0],\r\n  ['ch-ju', 0],\r\n  ['ch-ne', 0],\r\n  ['ch-ag', 0]\r\n];\r\n  \r\n\r\n//https://code.highcharts.com/mapdata/countries/ch/ch-all.geo.json","import React from 'react';\r\nimport Highcharts from 'highcharts/';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport {mapDataSwitzerland } from \"../database/mapDataSwitlzerland\";\r\nimport './map.css';\r\nrequire('highcharts/modules/map')(Highcharts);\r\n\r\n\r\n  \r\nclass Map extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            mapData: null\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        this.getMapData();\r\n        //console.log(this.state)\r\n        \r\n    }\r\n\r\n   \r\n\r\n    setSeriesData = ( casesData ) => {\r\n        const newData = casesData;\r\n        //console.log(newData)\r\n        let filterData = [];\r\n        newData.forEach( item => {\r\n            //console.log(item);\r\n            let contonKey = item.fields.abbreviation_canton_and_fl;\r\n            contonKey = 'ch-' + contonKey.toLowerCase();\r\n            filterData.push([contonKey, item.fields.ncumul_conf])\r\n            //console.log(contonKey);\r\n\r\n        })\r\n       return filterData;\r\n    }\r\n\r\n    setOptions = (mapData , myChartData , date) => {\r\n        const options = {\r\n            chart: {\r\n                map: mapData\r\n            },\r\n        \r\n            title: {\r\n                text: 'Laboratory Confirmed Cases: Geographical Distribution'\r\n            },\r\n        \r\n            subtitle: {\r\n                text: 'Update Time :  ' + date\r\n            },\r\n        \r\n            mapNavigation: {\r\n                enabled: true,\r\n                buttonOptions: {\r\n                    verticalAlign: 'bottom'\r\n                }\r\n            },\r\n        \r\n            colorAxis: {\r\n                min: 0\r\n            },\r\n        \r\n            series: [{\r\n                data: myChartData,\r\n                name: 'Laboratory Confirmed Cases',\r\n                states: {\r\n                    hover: {\r\n                        color: '#BADA55'\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    format: '{point.name}'\r\n                }\r\n            }]\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getMapData = async() => {\r\n        try{\r\n            const mapData = await mapDataSwitzerland();\r\n            \r\n            this.setState ({ mapData: mapData})\r\n            //console.log(this.state) \r\n\r\n        }catch(error){\r\n            console.log( error);\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        //console.log(this.sate)\r\n        const {contonsData } = this.props;\r\n        //console.log(contonsData[0].fields.date)\r\n        const { mapData } = this.state;\r\n\r\n        const myChartData = this.setSeriesData( contonsData);\r\n        \r\n        const options = this.setOptions(mapData, myChartData ,contonsData[0].fields.date);\r\n        //console.log(myChartData)\r\n        return (\r\n            <div className='mapchart-container'>\r\n                \r\n                <HighchartsReact\r\n                     \r\n                    highcharts = {Highcharts}\r\n                    constructorType = { 'mapChart' }\r\n                    options={options}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Map","import React from 'react';\r\n\r\nconst DropDown = (props) => {\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <div className=\"dropdown\">\r\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Select Contons\r\n                </button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Genève</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Aargau</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Graubünden</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Basel-Stadt</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Jura</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Zürich</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Valais</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Zug</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Fribourg</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Vaud</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Neuchâtel</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >St. Gallen</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Thurgau</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Nidwalden</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Bern</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Schwyz</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Ticino</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Schaffhausen</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Glarus</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Luzern</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Solothurn</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Uri</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Obwalden</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Appenzell Innerrhoden</a>\r\n                    <a className=\"dropdown-item\" href=\"#1\" onClick= {props.onButtonClick} >Appenzell Ausserrhoden</a>\r\n                </div>\r\n            </div>\r\n        </div> \r\n\r\n    )\r\n}\r\n\r\nexport default DropDown","import React from 'react';\r\n\r\nconst EachContonCart = (props) => {\r\n    //console.log(props.latestInfoByName)\r\n    return (\r\n        \r\n        <div className='conton-cart'>\r\n            <h2>{props.latestInfoByName.name}: situation</h2>\r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Laboratory Confirmed Infections : {props.latestInfoByName.ncumul_conf}</li>\r\n                <li className=\"list-group-item\">Current Hospital : {props.latestInfoByName.current_hosp}</li>\r\n                <li className=\"list-group-item\">Current isolated: {props.latestInfoByName.current_isolated}</li>\r\n                <li className=\"list-group-item\">current quarantined: {props.latestInfoByName.current_quarantined}</li>\r\n                <li className=\"list-group-item\">current released: {props.latestInfoByName.current_vent}</li>\r\n                <li className=\"list-group-item\">Total death: {props.latestInfoByName.ncumul_deceased}</li>\r\n                </ul>\r\n\r\n        </div>\r\n         \r\n    )\r\n}\r\n\r\nexport default EachContonCart","import React from 'react';\r\nimport DropDown from './DropDown';\r\nimport LineChart from './LineChart';\r\nimport EachContonCart from './EachContonCart';\r\nimport './contonDetails.css';\r\n\r\nconst ContonDetails = (props) => {\r\n    return(\r\n        <div className=\"contondetails-container\">\r\n            <div className=\"contondetails-left\">\r\n                <DropDown onButtonClick = {props.getContonName}/>\r\n                {props.latestInfoByName ? \r\n                    <EachContonCart latestInfoByName = {props.latestInfoByName}/>\r\n                :\r\n                <div>Loading ...</div>}\r\n                \r\n            </div>\r\n           \r\n            <LineChart className='conton-line-chart' options={props.chartOptins} earliestDate={props.earliestDate}/>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContonDetails","export const fileterDateForLineChart = (str) => {\r\n    const strArr = str.split('-');\r\n    \r\n    return Date.UTC(parseInt(strArr[0]),parseInt(strArr[1])-1, parseInt(strArr[2])) \r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport Map from '../components/Map';\r\nimport ContonDetails from '../components/ContonDetails';\r\nimport { fileterDateForLineChart } from '../utility/utities';\r\nimport './chartPanel.css';\r\nclass ChartPanel extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            isLoading: false,\r\n            name: 'Zürich',\r\n            contonData: [],\r\n            lineChartOptions: [],\r\n            xAxisArr: [],\r\n            latestInfoByName: null,\r\n            latestRecordDate: this.getCurrentDate()\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchContonData();\r\n        \r\n        this.fetchData();\r\n        \r\n        \r\n        \r\n        //console.log(this.state)\r\n      }\r\n\r\n   \r\n\r\n    getLineChartsOptions = (contonData) => {\r\n        const reversedArr = contonData.reverse()\r\n        //console.log( contonData);\r\n        \r\n        let options = [];\r\n        \r\n        let confirmedObject = {\r\n            name: 'total confirmed number',\r\n            data: []\r\n        }\r\n        let numberOfHospObject = {\r\n            name: 'Numbers of Hospital',\r\n            data: [],\r\n           \r\n            \r\n        }\r\n        let totalDeathObject = {\r\n            name: 'total death number',\r\n            data: [],\r\n            color: '#FF0000'\r\n            \r\n        }\r\n        let earliestDate = contonData[0].fields.date;\r\n        reversedArr.forEach( element => {\r\n            //console.log(element)\r\n            confirmedObject.data.push([element.fields.date,element.fields.ncumul_conf ? element.fields.ncumul_conf : 0])\r\n            numberOfHospObject.data.push([element.fields.dat,element.fields.ncumul_hosp ? element.fields.ncumul_hosp : 0])\r\n            totalDeathObject.data.push([element.fields.dat,element.fields.ncumul_deceased ? element.fields.ncumul_deceased : 0])\r\n            \r\n        })\r\n        //console.log(confirmedObject);\r\n        options.push(confirmedObject);\r\n        options.push(numberOfHospObject);\r\n        options.push(totalDeathObject);\r\n        this.setState({lineChartOptions: options})\r\n\r\n        this.setState({earliestDate: fileterDateForLineChart(earliestDate)});\r\n        //console.log(this.state.xAxisArr);\r\n        \r\n    }\r\n\r\n    \r\n\r\n    getCurrentDate = () => {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n\r\n    getContonName = (e) => {\r\n        //console.log('hello')\r\n        //console.log( e.target.text)\r\n        this.setState({name:e.target.text});\r\n        this.fetchContonData(e.target.text);\r\n    }\r\n\r\n    fetchData = async( ) => {\r\n        //console.log( this.state.latestRecordDate);\r\n        const dateArr = this.state.latestRecordDate.split('-')\r\n        //console.log(dateArr);\r\n        this.setState({ isLoading: !this.state.isLoading});\r\n        axios.get(`https://data.bs.ch/api/records/1.0/search/?dataset=100077&q=&rows=30&sort=update&facet=date&facet=name&facet=abbreviation_canton_and_fl&refine.date=${dateArr[0]}%2F${dateArr[1]}%2F${dateArr[2]}`)\r\n        .then(res => {\r\n          const countryData = res.data.records;\r\n         //console.log(countryData);\r\n          this.setState({data: countryData});\r\n        })\r\n    \r\n    \r\n    }\r\n\r\n    getLatestInfoByName = (contonData) => {\r\n        const latestInfo = contonData[contonData.length -1]\r\n        //console.log(latestInfo.fields);\r\n        if(latestInfo){\r\n            this.setState({latestInfoByName : latestInfo.fields})\r\n            this.setState({latestRecordDate : latestInfo.fields.date})\r\n        }\r\n    }\r\n\r\n    fetchContonData = async(name = this.state.name) => {\r\n        axios.get(`https://data.bs.ch/api/records/1.0/search/?dataset=100077&q=&rows=300&sort=update&facet=date&facet=name&facet=abbreviation_canton_and_fl&refine.name=${name}`)\r\n        .then(res => {\r\n            const contonData = res.data.records;\r\n            //console.log(contonData);\r\n            this.setState({contonData: contonData});\r\n            this.getLineChartsOptions( contonData );\r\n            this.getLatestInfoByName(contonData);\r\n            this.fetchData();\r\n            \r\n        }).catch( error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    render(){\r\n        //console.log( this.state.contonData)\r\n        return (\r\n            <div className=\"section-map\">\r\n                <h2>New Coronavirus:Situation in Contons</h2>\r\n                \r\n                {\r\n                    this.state.data.length ? <Map contonsData={this.state.data}/> : <div>Loading</div>\r\n                }\r\n\r\n                <ContonDetails getContonName={this.getContonName} chartOptins={this.state.lineChartOptions} earliestDate={this.state.earliestDate} latestInfoByName={this.state.latestInfoByName}/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default ChartPanel","import React from 'react';\r\nimport OverView from '../containers/OverView';\r\nimport ChartPanel from '../containers/ChartPanel';\r\n\r\nconst OverViewPage = () => {\r\n    return (\r\n        <div className='overview-page'>\r\n            <OverView />\r\n            <ChartPanel/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OverViewPage","import React from 'react';\r\nimport './searchBox.css';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    //console.log(currentDate)\r\n    return (\r\n        <div className='input_container'>\r\n            <input \r\n                className='form-control' \r\n                type='search' \r\n                placeholder='search countries and areas'\r\n                onChange = {searchChange} \r\n                \r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","export const listCountries = [\r\n    {\r\n        name: 'Germany',\r\n        region:[\r\n            'Land Berlin',\r\n            'Land Hamburg'\r\n        ]\r\n    },\r\n    {\r\n        name: 'France',\r\n        region:[\r\n            'Region Bretagne',\r\n            'Region Centre-Val de Loire',\r\n            'Region Corse',\r\n            'Region Hauts-de-France',\r\n            'Region Île de France',\r\n            'Region Normandie',\r\n            'Region Nouvelle-Aquitaine',\r\n            'Region Occitanie',\r\n            'Region Pays de la Loire',\r\n            'Region Provence-Alpes-Côte d’Azur',\r\n            'Overseas area French Guyana',\r\n            'Overseas area French Polynesia',\r\n            'Overseas area Guadeloupe',\r\n            'Overseas area La Réunion',\r\n            'Overseas area Martinique',\r\n            'Overseas area Mayotte',\r\n            'Overseas area Saint-Barthélemy',\r\n            'Overseas area Saint-Martin'\r\n        ]\r\n    },\r\n    {\r\n        name: 'Italy',\r\n        region:[\r\n            'Region Campania',\r\n            'Region Liguria',\r\n            'Region Sardinia',\r\n            'Region Veneto',\r\n            \r\n        ]\r\n    },\r\n    {\r\n        name: 'Austria',\r\n        region:[\r\n            'Land Burgenland',\r\n            'Land Burgenland',\r\n            'Land Burgenland',\r\n            'Land Burgenland',\r\n            \r\n        ]\r\n    }\r\n\r\n]\r\n\r\nexport const otherCountries = [\r\n    'Albania',\r\n    'Andorra',\r\n    'Argentina',\r\n    'Armenia',\r\n    'The Bahamas',\r\n    'Bahrain',\r\n    'Belgium',\r\n    'Belize',\r\n    'Bosnia and Herzegovina',\r\n    'Brazil',\r\n    'Canada',\r\n    'Cape Verde',\r\n    'Chile',\r\n    'Colombia',\r\n    'Costa Rica',\r\n    'Croatia',\r\n    'Czech Republic',\r\n    'Kingdom of Denmark',\r\n    'Ecuador',\r\n    'Georgia',\r\n    'Guyana',\r\n    'Honduras',\r\n    'Hungary',\r\n    'Iceland',\r\n    'India',\r\n    'Iran',\r\n    'Iraq',\r\n    'Ireland',\r\n    'Israel',\r\n    'Jamaica',\r\n    'Jordan',\r\n    'Kuwait',\r\n    'Lebanon',\r\n    'Libya',\r\n    'Luxemburg',\r\n    'Maldives',\r\n    'Malta',\r\n    'Morocco',\r\n    'Moldova',\r\n    'Monaco',\r\n    'Montenegro',\r\n    'Nepal',\r\n    'Kingdom of the Netherlands',\r\n    'North Macedonia',\r\n    'Occupied Palestinian Territory',\r\n    'Oman',\r\n    'Panama',\r\n    'Paraguay',\r\n    'Peru',\r\n    'Portugal',\r\n    'Qatar',\r\n    'Romania',\r\n    'Russia',\r\n    'Slovakia',\r\n    'Slovenia',\r\n    'Spain',\r\n    'Tunisia',\r\n    'Ukraine',\r\n    'United Arab Emirates',\r\n    'United Kingdom of Great Britain',\r\n    'United States of America'\r\n]\r\n\r\nexport const  hygienRules = [\r\n    {\r\n        imageUrl: './images/1.png',\r\n        description: 'Keep a distance.'\r\n    },\r\n    {\r\n        imageUrl: './images/2.png',\r\n        description: 'Wear a face mask if it is impossible to maintain that distance.'\r\n    },\r\n    {\r\n        imageUrl: './images/3.png',\r\n        description: 'Wash your hands thoroughly.'\r\n    },\r\n    {\r\n        imageUrl: './images/4.png',\r\n        description: 'If you experience symptoms, get tested immediately and stay at home.'\r\n    },\r\n    {\r\n        imageUrl: './images/5.png',\r\n        description: 'To enable contact tracing, always provide your complete contact information.'\r\n    },\r\n    {\r\n        imageUrl: './images/6.png',\r\n        description: 'To break infection chains: download and activate the SwissCovid app.'\r\n    },\r\n    {\r\n        imageUrl: './images/7.png',\r\n        description: 'If you test positive: isolate. If you have had contact with a confirmed case: quarantine.'\r\n    },\r\n    {\r\n        imageUrl: './images/8.png',\r\n        description: 'Do not shake hands.'\r\n    },\r\n    {\r\n        imageUrl: './images/9.png',\r\n        description: 'Cough and sneeze into your elbow.'\r\n    },\r\n    {\r\n        imageUrl: './images/9.png',\r\n        description: 'Only visit a doctor’s office or an accident and emergency department after making an appointment by phone.'\r\n    },\r\n]","import React from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './listCountries.css';\r\n\r\nimport { listCountries, otherCountries } from '../database/data';\r\n\r\nclass ListCountries extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            listCountries: listCountries,\r\n            otherCountries: otherCountries,\r\n            searchFields: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        //console.log(e.target.value);\r\n        this.setState({searchFields: e.target.value})\r\n    }\r\n    render(){\r\n        const {listCountries, searchFields, otherCountries} = this.state;\r\n        let filterListRegion;\r\n        const filterListCountries = listCountries.filter( listCountry => {\r\n            return listCountry.name.toLowerCase().includes(searchFields.toLowerCase())\r\n        });\r\n        //console.log(filterListCountries);\r\n        if(!filterListCountries.length){\r\n            filterListRegion = listCountries.filter( listCountry => {\r\n                //console.log(listCountry)\r\n                let country = listCountry.region.some( item => \r\n                    //console.log(item.toLowerCase())\r\n                    item.toLowerCase().includes(searchFields.toLowerCase())\r\n                \r\n                    )\r\n                return country;\r\n            }\r\n                )\r\n        }\r\n        //console.log(filterListRegion);\r\n        const filterResult = filterListCountries.length ? filterListCountries : filterListRegion;\r\n        const filterOtherCountries = otherCountries.filter( listCountry => {\r\n            return listCountry.toLowerCase().includes(searchFields.toLowerCase())\r\n        });//console.log(filterResult)\r\n        return (\r\n            \r\n            <div className='container list-container'>\r\n                <h2>New coronavirus: Mandatory quarantine for persons arriving in Switzerland\r\n                </h2>\r\n                <p className=''>\r\n                The countries and areas with a high risk of infection are set down in the Covid-19 Ordinance on International Passenger Transport Measures. This list is regularly updated. The decisive factor in whether a country is included on the list or not is the data of ECDC (European Centre for Disease Prevention and Control). Areas bordering Switzerland can be exempted from inclusion on the list despite a corresponding incidence of the new coronavirus.\r\n\r\n                </p>\r\n                <p>\r\n                If a country is on the list, this includes all of its areas, islands and overseas territories – even if they are not listed separately. Switzerland’s neighbouring countries are exempted from this regulation. In the case of these countries, it is not the entire country that is listed, but rather regions. Further information in this regard can be found on the page\r\n                </p>\r\n                <p><strong> List of countries and areas shows below</strong></p>\r\n                <p><strong> List valid upon arriving in Switzerland from 12.10.2020</strong></p>\r\n\r\n                <p><strong><a  href='https://www.bag.admin.ch/bag/en/home/krankheiten/ausbrueche-epidemien-pandemien/aktuelle-ausbrueche-epidemien/novel-cov/empfehlungen-fuer-reisende/quarantaene-einreisende.html'>More Info Here</a></strong></p>\r\n                <div>\r\n                    <p className='text-center'>\r\n                        <a className=\"btn btn-light mr-2\" data-toggle=\"collapse\" href=\"#neighbour\" role=\"button\" aria-expanded=\"false\" aria-controls=\"neighbour\">\r\n                        Areas of neighbouring countries\r\n                        </a>\r\n                        \r\n                        <a className=\"btn btn-light mr-2\" data-toggle=\"collapse\" href=\"#all\" role=\"button\" aria-expanded=\"false\" aria-controls=\"all\">\r\n                        Countries and areas\r\n                        </a>\r\n                    </p>\r\n                    <div className=\"\" id=\"neighbour\">\r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                        \r\n                        <div className=\"card card-body\">\r\n                            <ul className=\"list-group\">\r\n                            {filterResult.map(\r\n                                (country, index) => <li key= {`country-${index}`} className=\"list-group-item\">\r\n                                <strong>{country.name}</strong>\r\n                                    <ul className=\"list-group\">\r\n                                    {country.region.map((item, index) => \r\n                                        <li key={`region-${index}`} className=\"list-group-item\">{item}</li>\r\n                                    )}\r\n                                        \r\n                                    </ul>\r\n                                </li>\r\n                            )}\r\n                                \r\n                               \r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"collapse\" id=\"all\">\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                        <div className=\"card card-body\">\r\n                            <ul className=\"list-group\">\r\n                            {\r\n                                filterOtherCountries.map( (item, index) =>\r\n                                    <li key={`otherCountries-${index}`} className=\"list-group-item\">{item}</li> \r\n                                    )\r\n                            }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ListCountries;","import React from 'react';\r\nimport './symptions.css';\r\nconst SymptionsPage = () => {\r\n    return (\r\n        <div className='symptions-page'>\r\n            <div className ='symptions-head-info'>\r\n                <h2>Symptoms of coronavirus disease</h2>\r\n                <div className='check-symptions'>\r\n                    <a className='text-center' target=\"_blank\" rel='noopener noreferrer' href='https://check.foph-coronavirus.ch/screening'> Are you experiencing symptoms? Take the coronavirus check</a>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='symptions-container'>\r\n                <div className='vaccine-info'>\r\n                    <p>There is currently no authorised vaccine against the new coronavirus. Many research institutions around the world are working on the development of a vaccine against Covid-19. At present, it cannot be said exactly when a vaccine will be available.</p>\r\n                </div>\r\n                <p>There is a very wide range of symptoms caused by the new coronavirus.</p>\r\n                <p>Symptoms can vary in severity and can even be mild. Complications, such as pneumonia, are also possible.</p>\r\n                <p>Contact your doctor if you have any symptoms about which you are concerned.</p>\r\n                <p><strong>The most common symptoms are:</strong></p>\r\n                <ul className='text-left'>\r\n                    <li>Respiratory illness symptoms (sore throat, cough (usually dry), shortness of breath, chest pain)</li>\r\n                    <li>High temperature</li>\r\n                    <li>Sudden loss of sense of smell and/or taste</li>\r\n                </ul>\r\n\r\n                <p><strong>Other symptoms may include:</strong></p>\r\n                <ul  className='text-left'>\r\n                    <li>Headache</li>\r\n                    <li>General weakness, feeling unwell</li>\r\n                    <li>Aching muscles</li>\r\n                    <li>Gastrointestinal symptoms (nausea, vomiting, diarrhoea, stomach ache)</li>\r\n                    <li>Head cold</li>\r\n                    <li>Skin rash</li>\r\n                </ul>\r\n\r\n                <p styple={{fontSize: '10px'}}>These are for informational purposes only. Consult your local medical authority for advice. (Source: Federal Office of Public Health FOPH)</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SymptionsPage;","import React from 'react';\r\nimport './hygieCart.css';\r\n\r\nconst HygieCart = ({rule}) => {\r\n    return (\r\n        <div className=\"hygie-cart\" style={{width: '16rem'}}>\r\n            <img src={rule.imageUrl} className=\"\" alt=\"...\" />\r\n            <div class=\"hygie-text\">\r\n               \r\n                <p >{rule.description}</p>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HygieCart","import React from 'react';\r\nimport HygieCart from '../components/HygieCart';\r\nimport { hygienRules } from '../database/data';\r\nimport './proventionPage.css';\r\n\r\nconst ProventionPage = () => {\r\n    return (\r\n        <div className='provention-page'>\r\n            <h2>Protect yourself and others</h2>\r\n            <p>Continue to follow the hygiene and social distancing rules. You can best protect yourself from infection by regularly washing your hands with soap and following the rules on social distancing. </p>\r\n            <div className='rules-container'>\r\n                <h2>Hygiene rules and how to behave</h2>\r\n                <p>The Federal Office of Public Health recommends simple measures to prevent the spread of the new coronavirus.</p>\r\n                <div className='carts-container'>\r\n                    {hygienRules.map( rule => <HygieCart rule = {rule}/>)}\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProventionPage","import React from 'react';\r\nimport './footer.css';\r\nconst Footer = () => {\r\n    return (\r\n        <div className='text-center footer-container'>\r\n           \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"footer__icons__container\">\r\n                        <a type=\"button\" className=\"btn btn-secondary\" href='https://github.com/yudanZ/covid-19-tracker-swiss' target=\"_blank\" rel='noopener noreferrer'>Contribute on Github</a>\r\n                        <a type=\"button\" className=\"btn btn-primary\" href='https://twitter.com/intent/tweet?text=Get the latest Covid-19 updates with Covid-19 Swiss Tracker!&url=https://yudanz.github.io/covid-19-tracker-swiss/' target=\"_blank\" rel='noopener noreferrer'>Share on Twitter</a>\r\n                        <a type=\"button\" className=\"btn btn-warning\" href='https://github.com/yudanZ/covid-19-tracker-swiss/issues/new' target=\"_blank\" rel='noopener noreferrer'>Report an Issue</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"text-center col-12\">\r\n                <div className=\"footer__text\">\r\n                    <p className=\"mb-0\">Copyright &copy; 2020 by Yudan Zhai\r\n                        . <a href=\"https://www.yudan.ch/\">Designed by Yudan Zhai</a>\r\n                    </p>\r\n                </div>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route } from \"react-router-dom\";\nimport Navigation from './components/Navigation';\nimport OverViewPage from './pages/OverViewPage';\nimport ListCountries from './pages/ListCountries';\nimport SymptionsPage from './pages/Symptions';\nimport ProventionPage from './pages/ProventionPage';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: false,\n    }\n\n    \n  }\n  \n \n  render(){\n    //console.log(this.data);\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Navigation />\n          <Route exact path='/' component={OverViewPage} />\n          <Route exact path='/list' component={ListCountries} />\n          <Route exact path='/symptions' component={SymptionsPage} />\n          <Route exact path='/provention' component={ProventionPage} />\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n  <React.StrictMode>\n  \n    <App />\n \n   \n  </React.StrictMode>,\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}